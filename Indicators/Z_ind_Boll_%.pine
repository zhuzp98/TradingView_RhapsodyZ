// This work is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) https://creativecommons.org/licenses/by-nc-sa/4.0/
// Â© rhapsodyz

//@version=5
indicator(title     = "[Z] Bollinger Bands", 
     shorttitle     = "Boll", 
     overlay        = true, 
     format         = format.inherit,
     precision      = 2,
     timeframe      = "", 
     timeframe_gaps = true)

// ##################
// === Parameters ===
// ##################

// Use 21 as the period length. Classic is 20.
// Use EMA as the moving average. Classic is SMA.
// Use hlc3 as the source price. Classic is Close.

length  = input.int(21, minval = 1, title = "Boll Length", group = "Boll Settings")
lengthD = input.int(21, minval = 1, title = "Boll Dev EMA Length", group = "Boll Settings")
mult    = input.float(2.0, minval = 0.001, maxval = 50, title = "StdDev", group = "Boll Settings")
src     = input.source(hlc3, title = "Boll Source", group = "Boll Settings")
offset  = input.int(0, minval = -500, maxval = 500, title = "Offset", group = "Boll Settings")

// ##################
// === Indicators ===
// ##################

basis   = ta.ema(src, length)
dev     = mult * ta.stdev(src, length)
upper   = basis + dev
lower   = basis - dev
bbr     = (src - lower)/(upper - lower)
devEMA  = 2 * ta.ema(dev, lengthD) * 100

// ##############
// === Alerts ===
// ##############

downToBasis = ta.crossunder(src, basis)
upToBasis   = ta.crossover(src, basis)
hitUpper    = ta.crossover(src, upper)
hitLower    = ta.crossunder(src, lower)

alertcondition(downToBasis, title = "Drop to Boll Basis", message = "Drop to Boll basis, check rebounce")
alertcondition(upToBasis, title = "Hike to Boll Basis", message = "Hike to Boll basis, check retreat")
alertcondition(hitUpper, title = "Hike to Boll Upper", message = "Hike to Boll upper, check retreat")
alertcondition(hitLower, title = "Drop to Boll Lower", message = "Drop to Boll lower, check rebounce")

// #############
// === Plots ===
// #############

bbrPlot = plot(bbr, color = color.green, editable = false, display = display.status_line)
devPlot = plot(devEMA, color = color.black, editable = false, display = display.status_line)
bsPlot  = plot(basis, "Basis", color=#FF6D00, offset = offset)
p1      = plot(upper, "Upper", color=#2962FF, offset = offset)
p2      = plot(lower, "Lower", color=#2962FF, offset = offset)

fill(p1, p2, title = "Background", color=color.rgb(33, 150, 243, 95))
