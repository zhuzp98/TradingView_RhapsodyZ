// This work is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) https://creativecommons.org/licenses/by-nc-sa/4.0/
// Â© rhapsodyz

//@version=5
indicator(title     = "[Z] MACD Hist Divergence",
     shorttitle     = "MACD-Div",
     overlay        = false)

// ##################
// === Parameters ===
// ##################

fast_length     = input.int(12, title = "Fast Length", group = "MACD settings")
slow_length     = input.int(26, title = "Slow Length", group = "MACD settings")
src             = input.source(close, title = "Source", group = "MACD settings")
signal_length   = input.int(9, minval = 1, maxval = 50, title = "Signal Smoothing", group = "MACD settings")
ma_source       = input.string("EMA", options = ["SMA", "EMA"], title = "Oscillator MA Type", group = "MACD settings")
ma_signal       = input.string("EMA", options = ["SMA", "EMA"], title = "Signal Line MA Type", group = "MACD settings")

// ##################
// === Indicators ===
// ##################

fast_ma = ma_source == "EMA" ? ta.ema(src, fast_length) : ta.sma(src, fast_length)
slow_ma = ma_source == "EMA" ? ta.ema(src, slow_length) : ta.sma(src, slow_length)
macd    = fast_ma - slow_ma
signal  = ma_signal == "EMA" ? ta.ema(macd, signal_length) : ta.sma(macd, signal_length)
hist    = macd - signal
histDiv = (hist - hist[1]) * 5

// ##############
// === Alerts ===
// ##############

goldCross = ta.crossover(macd, signal)
deadCross = ta.crossunder(macd, signal)

alertcondition(goldCross, title = "MACD GoldCross", message = "MACD Gold Cross, seek hiking")
alertcondition(deadCross, title = "MACD DeadCross", message = "MACD Dead Cross, seek droping")

// #############
// === Plots ===
// #############

hline(0, "Zero Line", color = color.new(#787B86, 50))
histDivPlot = plot(histDiv, title = "HistDiv", style = plot.style_columns, color = (histDiv >= 0 ? (histDiv[1] < histDiv ? #26A69A : #B2DFDB) : (histDiv[1] < histDiv ? #FFCDD2 : #FF5252)))
macdPlot    = plot(macd,   title = "MACD",   color = #2962FF)
signalPlot  = plot(signal, title = "Signal", color = #FF6D00)
